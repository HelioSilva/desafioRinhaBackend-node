version: "3.4"
services:
  api1: # API - Instância 01
    # image: ghcr.io/lpicanco/backend-dogfight-23:latest
    build: node/.
    hostname: api1
    depends_on:
      - db
      - redis
    expose:
      - "9999"
    deploy:
      resources:
        limits:
          # cpus: "0.30"
          memory: "0.5GB"
  api2: # API - Instância 02
    # image: ghcr.io/lpicanco/backend-dogfight-23:latest
    build: node/.
    hostname: api2
    depends_on:
      - db
      - redis
    expose:
      - "9999"
    deploy:
      resources:
        limits:
          # cpus: "0.30"
          memory: "0.5GB"

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          # cpus: "0.20"
          memory: "0.5GB"
  db: # Banco de dados
    image: postgres:15.4
    command: postgres -c max_connections=300 -c work_mem=800MB -c shared_buffers=1GB
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          # cpus: "0.6"
          memory: "1GB"
  redis: # Cache
    image: redis:7.2
    hostname: redis
    expose:
      - "6379"
    deploy:
      resources:
        limits:
          # cpus: "0.10"
          memory: "0.5GB"
